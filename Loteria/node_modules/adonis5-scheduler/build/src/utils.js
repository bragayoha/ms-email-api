"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.listFiles = exports.getSchedulerTmpPath = exports.dirIsExists = exports.getSchedulerClassesPath = exports.getSchedulerCompiledClassesPath = exports.isObject = exports.debug = void 0;
const path_1 = require("path");
const fs_1 = require("fs");
exports.debug = require('debug')('adonis:scheduler');
function isObject(value) {
    const type = typeof value;
    return value !== null && (type === 'object' || type === 'function');
}
exports.isObject = isObject;
function getSchedulerCompiledClassesPath(app) {
    return path_1.join(process.cwd(), '/build/', app.resolveNamespaceDirectory('scheduler') || 'app/Tasks');
}
exports.getSchedulerCompiledClassesPath = getSchedulerCompiledClassesPath;
function getSchedulerClassesPath(app) {
    return path_1.join(process.cwd(), app.resolveNamespaceDirectory('scheduler') || 'app/Tasks');
}
exports.getSchedulerClassesPath = getSchedulerClassesPath;
async function dirIsExists(path) {
    try {
        return !!(await fs_1.promises.readdir(path));
    }
    catch (e) {
        return false;
    }
}
exports.dirIsExists = dirIsExists;
async function getSchedulerTmpPath() {
    const path = path_1.join(process.cwd(), 'tmp');
    try {
        if (!(await dirIsExists(path))) {
            await fs_1.promises.mkdir(path);
        }
    }
    catch (e) {
        console.error(e.message);
    }
    return path;
}
exports.getSchedulerTmpPath = getSchedulerTmpPath;
const listFiles = (path) => {
    return fs_1.promises.readdir(path);
};
exports.listFiles = listFiles;
