"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Schema_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Lucid/Schema"));
class default_1 extends Schema_1.default {
    constructor() {
        super(...arguments);
        this.tableName = 'user_roles';
    }
    async up() {
        this.schema.createTable(this.tableName, (table) => {
            table.increments('id').unsigned().unique().notNullable();
            table.integer('user_id').unsigned().references('users.id').notNullable().onDelete('CASCADE');
            table.integer('role_id').unsigned().references('roles.id').notNullable().onDelete('CASCADE');
            table.timestamp('created_at', { useTz: true });
            table.timestamp('updated_at', { useTz: true });
        });
    }
    async down() {
        this.schema.dropTable(this.tableName);
    }
}
exports.default = default_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY1NzU1MTQ3ODIwMV91c2VyX3JvbGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiMTY1NzU1MTQ3ODIwMV91c2VyX3JvbGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsdUZBQWlEO0FBRWpELGVBQXFCLFNBQVEsZ0JBQVU7SUFBdkM7O1FBQ1ksY0FBUyxHQUFHLFlBQVksQ0FBQTtJQW9CcEMsQ0FBQztJQWxCUSxLQUFLLENBQUMsRUFBRTtRQUNiLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRTtZQUNoRCxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFBO1lBRXhELEtBQUssQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQTtZQUM1RixLQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUE7WUFLNUYsS0FBSyxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQTtZQUM5QyxLQUFLLENBQUMsU0FBUyxDQUFDLFlBQVksRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFBO1FBQ2hELENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVNLEtBQUssQ0FBQyxJQUFJO1FBQ2YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBQ3ZDLENBQUM7Q0FDRjtBQXJCRCw0QkFxQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmFzZVNjaGVtYSBmcm9tICdAaW9jOkFkb25pcy9MdWNpZC9TY2hlbWEnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgQmFzZVNjaGVtYSB7XG4gIHByb3RlY3RlZCB0YWJsZU5hbWUgPSAndXNlcl9yb2xlcydcblxuICBwdWJsaWMgYXN5bmMgdXAoKSB7XG4gICAgdGhpcy5zY2hlbWEuY3JlYXRlVGFibGUodGhpcy50YWJsZU5hbWUsICh0YWJsZSkgPT4ge1xuICAgICAgdGFibGUuaW5jcmVtZW50cygnaWQnKS51bnNpZ25lZCgpLnVuaXF1ZSgpLm5vdE51bGxhYmxlKClcblxuICAgICAgdGFibGUuaW50ZWdlcigndXNlcl9pZCcpLnVuc2lnbmVkKCkucmVmZXJlbmNlcygndXNlcnMuaWQnKS5ub3ROdWxsYWJsZSgpLm9uRGVsZXRlKCdDQVNDQURFJylcbiAgICAgIHRhYmxlLmludGVnZXIoJ3JvbGVfaWQnKS51bnNpZ25lZCgpLnJlZmVyZW5jZXMoJ3JvbGVzLmlkJykubm90TnVsbGFibGUoKS5vbkRlbGV0ZSgnQ0FTQ0FERScpXG5cbiAgICAgIC8qKlxuICAgICAgICogVXNlcyB0aW1lc3RhbXB0eiBmb3IgUG9zdGdyZVNRTCBhbmQgREFURVRJTUUyIGZvciBNU1NRTFxuICAgICAgICovXG4gICAgICB0YWJsZS50aW1lc3RhbXAoJ2NyZWF0ZWRfYXQnLCB7IHVzZVR6OiB0cnVlIH0pXG4gICAgICB0YWJsZS50aW1lc3RhbXAoJ3VwZGF0ZWRfYXQnLCB7IHVzZVR6OiB0cnVlIH0pXG4gICAgfSlcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBkb3duKCkge1xuICAgIHRoaXMuc2NoZW1hLmRyb3BUYWJsZSh0aGlzLnRhYmxlTmFtZSlcbiAgfVxufVxuIl19