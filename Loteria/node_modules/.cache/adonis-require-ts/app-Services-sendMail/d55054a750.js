"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendMail = void 0;
const kafkajs_1 = require("kafkajs");
const kafka = new kafkajs_1.Kafka({
    clientId: 'api',
    brokers: ['localhost:9092'],
    retry: {
        initialRetryTime: 300,
        retries: 5,
    }
});
const producer = kafka.producer({
    allowAutoTopicCreation: true,
    transactionTimeout: 30000
});
async function sendMail(user, subject, topic, info) {
    await producer.connect();
    const message = {
        user: user,
        subject: subject,
        info: info,
    };
    await producer.send({
        topic: topic,
        messages: [
            { value: JSON.stringify(message) }
        ]
    });
}
exports.sendMail = sendMail;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VuZE1haWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzZW5kTWFpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxxQ0FBK0I7QUFFL0IsTUFBTSxLQUFLLEdBQUcsSUFBSSxlQUFLLENBQUM7SUFDdEIsUUFBUSxFQUFFLEtBQUs7SUFDZixPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztJQUMzQixLQUFLLEVBQUU7UUFDTCxnQkFBZ0IsRUFBRSxHQUFHO1FBQ3JCLE9BQU8sRUFBRSxDQUFDO0tBQ1g7Q0FDRixDQUFDLENBQUE7QUFFRixNQUFNLFFBQVEsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDO0lBQzlCLHNCQUFzQixFQUFFLElBQUk7SUFDNUIsa0JBQWtCLEVBQUUsS0FBSztDQUMxQixDQUFDLENBQUE7QUFFSyxLQUFLLFVBQVUsUUFBUSxDQUFDLElBQVUsRUFBRSxPQUFlLEVBQUUsS0FBYSxFQUFFLElBQVM7SUFDbEYsTUFBTSxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUE7SUFFeEIsTUFBTSxPQUFPLEdBQUc7UUFDZCxJQUFJLEVBQUUsSUFBSTtRQUNWLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxJQUFJO0tBQ1gsQ0FBQTtJQUVELE1BQU0sUUFBUSxDQUFDLElBQUksQ0FBQztRQUNsQixLQUFLLEVBQUUsS0FBSztRQUNaLFFBQVEsRUFBRTtZQUNSLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUM7U0FDbEM7S0FDRixDQUFDLENBQUE7QUFDSixDQUFDO0FBZkQsNEJBZUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVXNlciBmcm9tICdBcHAvTW9kZWxzL1VzZXInXG5pbXBvcnQgeyBLYWZrYSB9IGZyb20gJ2thZmthanMnXG5cbmNvbnN0IGthZmthID0gbmV3IEthZmthKHtcbiAgY2xpZW50SWQ6ICdhcGknLFxuICBicm9rZXJzOiBbJ2xvY2FsaG9zdDo5MDkyJ10sXG4gIHJldHJ5OiB7XG4gICAgaW5pdGlhbFJldHJ5VGltZTogMzAwLFxuICAgIHJldHJpZXM6IDUsXG4gIH1cbn0pXG5cbmNvbnN0IHByb2R1Y2VyID0ga2Fma2EucHJvZHVjZXIoe1xuICBhbGxvd0F1dG9Ub3BpY0NyZWF0aW9uOiB0cnVlLFxuICB0cmFuc2FjdGlvblRpbWVvdXQ6IDMwMDAwXG59KVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2VuZE1haWwodXNlcjogVXNlciwgc3ViamVjdDogc3RyaW5nLCB0b3BpYzogc3RyaW5nLCBpbmZvPzoge30pOiBQcm9taXNlPHZvaWQ+IHtcbiAgYXdhaXQgcHJvZHVjZXIuY29ubmVjdCgpXG5cbiAgY29uc3QgbWVzc2FnZSA9IHtcbiAgICB1c2VyOiB1c2VyLFxuICAgIHN1YmplY3Q6IHN1YmplY3QsXG4gICAgaW5mbzogaW5mbyxcbiAgfVxuXG4gIGF3YWl0IHByb2R1Y2VyLnNlbmQoe1xuICAgIHRvcGljOiB0b3BpYyxcbiAgICBtZXNzYWdlczogW1xuICAgICAgeyB2YWx1ZTogSlNPTi5zdHJpbmdpZnkobWVzc2FnZSl9XG4gICAgXVxuICB9KVxufVxuIl19