"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const User_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Models/User"));
const Env_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Env"));
class AuthController {
    async login({ auth, request, response }) {
        const { email, password } = request.all();
        const user = await User_1.default.query().where('email', email).preload('roles').first();
        try {
            const token = await auth.use('api').attempt(email, password, {
                name: user?.name,
                expiresIn: Env_1.default.get('NODE_ENV') === 'development' ? '' : '30min',
            });
            return { token, user };
        }
        catch (error) {
            return response.unauthorized({ message: 'Invalid credentials', originalError: error.message });
        }
    }
}
exports.default = AuthController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXV0aENvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJBdXRoQ29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLGlGQUFrQztBQUVsQyxnRkFBc0M7QUFDdEMsTUFBcUIsY0FBYztJQUMxQixLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQXVCO1FBQ2pFLE1BQU0sRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEdBQUcsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFBO1FBRXpDLE1BQU0sSUFBSSxHQUFHLE1BQU0sY0FBSSxDQUFDLEtBQUssRUFBRSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFBO1FBRTlFLElBQUk7WUFDRixNQUFNLEtBQUssR0FBRyxNQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUU7Z0JBQzNELElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtnQkFDaEIsU0FBUyxFQUFFLGFBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEtBQUssYUFBYSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU87YUFDaEUsQ0FBQyxDQUFBO1lBRUYsT0FBTyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQTtTQUN2QjtRQUFDLE9BQU8sS0FBSyxFQUFFO1lBQ2QsT0FBTyxRQUFRLENBQUMsWUFBWSxDQUFDLEVBQUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLGFBQWEsRUFBRSxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQTtTQUMvRjtJQUNILENBQUM7Q0FDRjtBQWpCRCxpQ0FpQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEh0dHBDb250ZXh0Q29udHJhY3QgfSBmcm9tICdAaW9jOkFkb25pcy9Db3JlL0h0dHBDb250ZXh0J1xuXG5pbXBvcnQgVXNlciBmcm9tICdBcHAvTW9kZWxzL1VzZXInXG5cbmltcG9ydCBFbnYgZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9FbnYnXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBdXRoQ29udHJvbGxlciB7XG4gIHB1YmxpYyBhc3luYyBsb2dpbih7IGF1dGgsIHJlcXVlc3QsIHJlc3BvbnNlIH06IEh0dHBDb250ZXh0Q29udHJhY3QpIHtcbiAgICBjb25zdCB7IGVtYWlsLCBwYXNzd29yZCB9ID0gcmVxdWVzdC5hbGwoKVxuXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIucXVlcnkoKS53aGVyZSgnZW1haWwnLCBlbWFpbCkucHJlbG9hZCgncm9sZXMnKS5maXJzdCgpXG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgdG9rZW4gPSBhd2FpdCBhdXRoLnVzZSgnYXBpJykuYXR0ZW1wdChlbWFpbCwgcGFzc3dvcmQsIHtcbiAgICAgICAgbmFtZTogdXNlcj8ubmFtZSxcbiAgICAgICAgZXhwaXJlc0luOiBFbnYuZ2V0KCdOT0RFX0VOVicpID09PSAnZGV2ZWxvcG1lbnQnID8gJycgOiAnMzBtaW4nLFxuICAgICAgfSlcblxuICAgICAgcmV0dXJuIHsgdG9rZW4sIHVzZXIgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4gcmVzcG9uc2UudW5hdXRob3JpemVkKHsgbWVzc2FnZTogJ0ludmFsaWQgY3JlZGVudGlhbHMnLCBvcmlnaW5hbEVycm9yOiBlcnJvci5tZXNzYWdlIH0pXG4gICAgfVxuICB9XG59XG4iXX0=