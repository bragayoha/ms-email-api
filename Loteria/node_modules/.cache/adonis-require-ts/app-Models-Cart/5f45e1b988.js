"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const Orm_1 = global[Symbol.for('ioc.use')]("Adonis/Lucid/Orm");
class Cart extends Orm_1.BaseModel {
}
__decorate([
    (0, Orm_1.column)({ isPrimary: true, serializeAs: null }),
    __metadata("design:type", Number)
], Cart.prototype, "id", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", Number)
], Cart.prototype, "minCartValue", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true, serializeAs: null }),
    __metadata("design:type", typeof (_a = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _a : Object)
], Cart.prototype, "createdAt", void 0);
__decorate([
    Orm_1.column.dateTime({
        autoCreate: true,
        autoUpdate: true,
        serializeAs: null,
    }),
    __metadata("design:type", typeof (_b = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _b : Object)
], Cart.prototype, "updatedAt", void 0);
exports.default = Cart;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkNhcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsaUNBQWdDO0FBQ2hDLGdFQUF5RDtBQUV6RCxNQUFxQixJQUFLLFNBQVEsZUFBUztDQWdCMUM7QUFkQztJQURDLElBQUEsWUFBTSxFQUFDLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLENBQUM7O2dDQUM5QjtBQUdqQjtJQURDLElBQUEsWUFBTSxHQUFFOzswQ0FDa0I7QUFHM0I7SUFEQyxZQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLENBQUM7a0RBQ3ZDLGdCQUFRLG9CQUFSLGdCQUFRO3VDQUFBO0FBTzFCO0lBTEMsWUFBTSxDQUFDLFFBQVEsQ0FBQztRQUNmLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLFdBQVcsRUFBRSxJQUFJO0tBQ2xCLENBQUM7a0RBQ2dCLGdCQUFRLG9CQUFSLGdCQUFRO3VDQUFBO0FBZjVCLHVCQWdCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSAnbHV4b24nXG5pbXBvcnQgeyBCYXNlTW9kZWwsIGNvbHVtbiB9IGZyb20gJ0Bpb2M6QWRvbmlzL0x1Y2lkL09ybSdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FydCBleHRlbmRzIEJhc2VNb2RlbCB7XG4gIEBjb2x1bW4oeyBpc1ByaW1hcnk6IHRydWUsIHNlcmlhbGl6ZUFzOiBudWxsIH0pXG4gIHB1YmxpYyBpZDogbnVtYmVyXG5cbiAgQGNvbHVtbigpXG4gIHB1YmxpYyBtaW5DYXJ0VmFsdWU6IG51bWJlclxuXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlLCBzZXJpYWxpemVBczogbnVsbCB9KVxuICBwdWJsaWMgY3JlYXRlZEF0OiBEYXRlVGltZVxuXG4gIEBjb2x1bW4uZGF0ZVRpbWUoe1xuICAgIGF1dG9DcmVhdGU6IHRydWUsXG4gICAgYXV0b1VwZGF0ZTogdHJ1ZSxcbiAgICBzZXJpYWxpemVBczogbnVsbCxcbiAgfSlcbiAgcHVibGljIHVwZGF0ZWRBdDogRGF0ZVRpbWVcbn1cbiJdfQ==