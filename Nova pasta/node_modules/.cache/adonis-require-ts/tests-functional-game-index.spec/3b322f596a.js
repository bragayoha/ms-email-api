"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Database_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Lucid/Database"));
const runner_1 = require("@japa/runner");
runner_1.test.group('Game index', (group) => {
    group.each.setup(async () => {
        await Database_1.default.beginGlobalTransaction();
        return () => Database_1.default.rollbackGlobalTransaction();
    });
    (0, runner_1.test)('user must be logged in before get a list of games', async ({ client, route }) => {
        const response = await client.get(route('GamesController.index'));
        response.assertStatus(401);
        response.assertBodyContains({
            errors: [{ message: 'E_UNAUTHORIZED_ACCESS: Unauthorized access' }],
        });
    });
    (0, runner_1.test)('get a paginate list of games', async ({ client, route }) => {
        const login = await client.post(route('AuthController.login')).form({
            email: 'admin@example.com',
            password: 'test123',
        });
        const token = login.body().token.token;
        const response = await client.get(route('GamesController.index')).bearerToken(token);
        response.dumpBody();
        response.assertStatus(200);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImluZGV4LnNwZWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSwyRkFBaUQ7QUFFakQseUNBQW1DO0FBRW5DLGFBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUU7SUFDakMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxJQUFJLEVBQUU7UUFDMUIsTUFBTSxrQkFBUSxDQUFDLHNCQUFzQixFQUFFLENBQUE7UUFFdkMsT0FBTyxHQUFHLEVBQUUsQ0FBQyxrQkFBUSxDQUFDLHlCQUF5QixFQUFFLENBQUE7SUFDbkQsQ0FBQyxDQUFDLENBQUE7SUFFRixJQUFBLGFBQUksRUFBQyxtREFBbUQsRUFBRSxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRTtRQUNwRixNQUFNLFFBQVEsR0FBRyxNQUFNLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLHVCQUF1QixDQUFDLENBQUMsQ0FBQTtRQUVqRSxRQUFRLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBRTFCLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQztZQUMxQixNQUFNLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSw0Q0FBNEMsRUFBRSxDQUFDO1NBQ3BFLENBQUMsQ0FBQTtJQUNKLENBQUMsQ0FBQyxDQUFBO0lBRUYsSUFBQSxhQUFJLEVBQUMsOEJBQThCLEVBQUUsS0FBSyxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUU7UUFDL0QsTUFBTSxLQUFLLEdBQUcsTUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQ2xFLEtBQUssRUFBRSxtQkFBbUI7WUFDMUIsUUFBUSxFQUFFLFNBQVM7U0FDcEIsQ0FBQyxDQUFBO1FBRUYsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUE7UUFFdEMsTUFBTSxRQUFRLEdBQUcsTUFBTSxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBRXBGLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQTtRQUNuQixRQUFRLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBSzVCLENBQUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQyxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGF0YWJhc2UgZnJvbSAnQGlvYzpBZG9uaXMvTHVjaWQvRGF0YWJhc2UnXG5cbmltcG9ydCB7IHRlc3QgfSBmcm9tICdAamFwYS9ydW5uZXInXG5cbnRlc3QuZ3JvdXAoJ0dhbWUgaW5kZXgnLCAoZ3JvdXApID0+IHtcbiAgZ3JvdXAuZWFjaC5zZXR1cChhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgRGF0YWJhc2UuYmVnaW5HbG9iYWxUcmFuc2FjdGlvbigpXG5cbiAgICByZXR1cm4gKCkgPT4gRGF0YWJhc2Uucm9sbGJhY2tHbG9iYWxUcmFuc2FjdGlvbigpXG4gIH0pXG5cbiAgdGVzdCgndXNlciBtdXN0IGJlIGxvZ2dlZCBpbiBiZWZvcmUgZ2V0IGEgbGlzdCBvZiBnYW1lcycsIGFzeW5jICh7IGNsaWVudCwgcm91dGUgfSkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2xpZW50LmdldChyb3V0ZSgnR2FtZXNDb250cm9sbGVyLmluZGV4JykpXG5cbiAgICByZXNwb25zZS5hc3NlcnRTdGF0dXMoNDAxKVxuXG4gICAgcmVzcG9uc2UuYXNzZXJ0Qm9keUNvbnRhaW5zKHtcbiAgICAgIGVycm9yczogW3sgbWVzc2FnZTogJ0VfVU5BVVRIT1JJWkVEX0FDQ0VTUzogVW5hdXRob3JpemVkIGFjY2VzcycgfV0sXG4gICAgfSlcbiAgfSlcblxuICB0ZXN0KCdnZXQgYSBwYWdpbmF0ZSBsaXN0IG9mIGdhbWVzJywgYXN5bmMgKHsgY2xpZW50LCByb3V0ZSB9KSA9PiB7XG4gICAgY29uc3QgbG9naW4gPSBhd2FpdCBjbGllbnQucG9zdChyb3V0ZSgnQXV0aENvbnRyb2xsZXIubG9naW4nKSkuZm9ybSh7XG4gICAgICBlbWFpbDogJ2FkbWluQGV4YW1wbGUuY29tJyxcbiAgICAgIHBhc3N3b3JkOiAndGVzdDEyMycsXG4gICAgfSlcblxuICAgIGNvbnN0IHRva2VuID0gbG9naW4uYm9keSgpLnRva2VuLnRva2VuXG5cbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNsaWVudC5nZXQocm91dGUoJ0dhbWVzQ29udHJvbGxlci5pbmRleCcpKS5iZWFyZXJUb2tlbih0b2tlbilcblxuICAgIHJlc3BvbnNlLmR1bXBCb2R5KClcbiAgICByZXNwb25zZS5hc3NlcnRTdGF0dXMoMjAwKVxuXG4gICAgLy8gcmVzcG9uc2UuYXNzZXJ0Qm9keUNvbnRhaW5zKHtcbiAgICAvLyAgIGVycm9yczogW3sgbWVzc2FnZTogJ0VfVU5BVVRIT1JJWkVEX0FDQ0VTUzogVW5hdXRob3JpemVkIGFjY2VzcycgfV0sXG4gICAgLy8gfSlcbiAgfSlcbn0pXG4iXX0=