"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.configureSuite = exports.runnerHooks = exports.reporters = exports.plugins = void 0;
const TestUtils_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/TestUtils"));
const preset_adonis_1 = require("@japa/preset-adonis");
exports.plugins = [(0, preset_adonis_1.assert)(), (0, preset_adonis_1.runFailedTests)(), (0, preset_adonis_1.apiClient)()];
exports.reporters = [(0, preset_adonis_1.specReporter)()];
exports.runnerHooks = {
    setup: [() => TestUtils_1.default.ace().loadCommands(), () => TestUtils_1.default.db().migrate()],
    teardown: [],
};
const configureSuite = (suite) => {
    if (suite.name === 'functional') {
        suite.setup(() => TestUtils_1.default.httpServer().start());
    }
};
exports.configureSuite = configureSuite;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vdHN0cmFwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYm9vdHN0cmFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQVFBLDRGQUFrRDtBQUNsRCx1REFBcUY7QUFheEUsUUFBQSxPQUFPLEdBQXNCLENBQUMsSUFBQSxzQkFBTSxHQUFFLEVBQUUsSUFBQSw4QkFBYyxHQUFFLEVBQUUsSUFBQSx5QkFBUyxHQUFFLENBQUMsQ0FBQTtBQVl0RSxRQUFBLFNBQVMsR0FBd0IsQ0FBQyxJQUFBLDRCQUFZLEdBQUUsQ0FBQyxDQUFBO0FBY2pELFFBQUEsV0FBVyxHQUFpRDtJQUN2RSxLQUFLLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxtQkFBUyxDQUFDLEdBQUcsRUFBRSxDQUFDLFlBQVksRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLG1CQUFTLENBQUMsRUFBRSxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDN0UsUUFBUSxFQUFFLEVBQUU7Q0FDYixDQUFBO0FBYU0sTUFBTSxjQUFjLEdBQTZCLENBQUMsS0FBSyxFQUFFLEVBQUU7SUFDaEUsSUFBSSxLQUFLLENBQUMsSUFBSSxLQUFLLFlBQVksRUFBRTtRQUMvQixLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDLG1CQUFTLENBQUMsVUFBVSxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQTtLQUNsRDtBQUNILENBQUMsQ0FBQTtBQUpZLFFBQUEsY0FBYyxrQkFJMUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZpbGUgc291cmNlOiBodHRwczovL2JpdC5seS8zdWthSFR6XG4gKlxuICogRmVlbCBmcmVlIHRvIGxldCB1cyBrbm93IHZpYSBQUiwgaWYgeW91IGZpbmQgc29tZXRoaW5nIGJyb2tlbiBpbiB0aGlzIGNvbnRyYWN0XG4gKiBmaWxlLlxuICovXG5cbmltcG9ydCB0eXBlIHsgQ29uZmlnIH0gZnJvbSAnQGphcGEvcnVubmVyJ1xuaW1wb3J0IFRlc3RVdGlscyBmcm9tICdAaW9jOkFkb25pcy9Db3JlL1Rlc3RVdGlscydcbmltcG9ydCB7IGFzc2VydCwgcnVuRmFpbGVkVGVzdHMsIHNwZWNSZXBvcnRlciwgYXBpQ2xpZW50IH0gZnJvbSAnQGphcGEvcHJlc2V0LWFkb25pcydcblxuLypcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxufCBKYXBhIFBsdWdpbnNcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxufFxufCBKYXBhIHBsdWdpbnMgYWxsb3dzIHlvdSB0byBhZGQgYWRkaXRpb25hbCBmZWF0dXJlcyB0byBKYXBhLiBCeSBkZWZhdWx0XG58IHdlIHJlZ2lzdGVyIHRoZSBhc3NlcnRpb24gcGx1Z2luLlxufFxufCBGZWVsIGZyZWUgdG8gcmVtb3ZlIGV4aXN0aW5nIHBsdWdpbnMgb3IgYWRkIG1vcmUuXG58XG4qL1xuZXhwb3J0IGNvbnN0IHBsdWdpbnM6IENvbmZpZ1sncGx1Z2lucyddID0gW2Fzc2VydCgpLCBydW5GYWlsZWRUZXN0cygpLCBhcGlDbGllbnQoKV1cblxuLypcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxufCBKYXBhIFJlcG9ydGVyc1xufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG58XG58IEphcGEgcmVwb3J0ZXJzIGRpc3BsYXlzL3NhdmVzIHRoZSBwcm9ncmVzcyBvZiB0ZXN0cyBhcyB0aGV5IGFyZSBleGVjdXRlZC5cbnwgQnkgZGVmYXVsdCwgd2UgcmVnaXN0ZXIgdGhlIHNwZWMgcmVwb3J0ZXIgdG8gc2hvdyBhIGRldGFpbGVkIHJlcG9ydFxufCBvZiB0ZXN0cyBvbiB0aGUgdGVybWluYWwuXG58XG4qL1xuZXhwb3J0IGNvbnN0IHJlcG9ydGVyczogQ29uZmlnWydyZXBvcnRlcnMnXSA9IFtzcGVjUmVwb3J0ZXIoKV1cblxuLypcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxufCBSdW5uZXIgaG9va3NcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxufFxufCBSdW5uZXIgaG9va3MgYXJlIGV4ZWN1dGVkIGFmdGVyIGJvb3RpbmcgdGhlIEFkb25pc0pTIGFwcCBhbmRcbnwgYmVmb3JlIHRoZSB0ZXN0IGZpbGVzIGFyZSBpbXBvcnRlZC5cbnxcbnwgWW91IGNhbiBwZXJmb3JtIGFjdGlvbnMgbGlrZSBzdGFydGluZyB0aGUgSFRUUCBzZXJ2ZXIgb3IgcnVubmluZyBtaWdyYXRpb25zXG58IHdpdGhpbiB0aGUgcnVubmVyIGhvb2tzXG58XG4qL1xuZXhwb3J0IGNvbnN0IHJ1bm5lckhvb2tzOiBSZXF1aXJlZDxQaWNrPENvbmZpZywgJ3NldHVwJyB8ICd0ZWFyZG93bic+PiA9IHtcbiAgc2V0dXA6IFsoKSA9PiBUZXN0VXRpbHMuYWNlKCkubG9hZENvbW1hbmRzKCksICgpID0+IFRlc3RVdGlscy5kYigpLm1pZ3JhdGUoKV0sXG4gIHRlYXJkb3duOiBbXSxcbn1cblxuLypcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxufCBDb25maWd1cmUgaW5kaXZpZHVhbCBzdWl0ZXNcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxufFxufCBUaGUgY29uZmlndXJlU3VpdGUgbWV0aG9kIGdldHMgY2FsbGVkIGZvciBldmVyeSB0ZXN0IHN1aXRlIHJlZ2lzdGVyZWRcbnwgd2l0aGluIFwiLmFkb25pc3JjLmpzb25cIiBmaWxlLlxufFxufCBZb3UgY2FuIHVzZSB0aGlzIG1ldGhvZCB0byBjb25maWd1cmUgc3VpdGVzLiBGb3IgZXhhbXBsZTogT25seSBzdGFydFxufCB0aGUgSFRUUCBzZXJ2ZXIgd2hlbiBpdCBpcyBhIGZ1bmN0aW9uYWwgc3VpdGUuXG4qL1xuZXhwb3J0IGNvbnN0IGNvbmZpZ3VyZVN1aXRlOiBDb25maWdbJ2NvbmZpZ3VyZVN1aXRlJ10gPSAoc3VpdGUpID0+IHtcbiAgaWYgKHN1aXRlLm5hbWUgPT09ICdmdW5jdGlvbmFsJykge1xuICAgIHN1aXRlLnNldHVwKCgpID0+IFRlc3RVdGlscy5odHRwU2VydmVyKCkuc3RhcnQoKSlcbiAgfVxufVxuIl19