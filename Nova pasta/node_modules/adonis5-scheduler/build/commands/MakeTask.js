"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const ace_1 = require("@adonisjs/ace");
const utils_1 = require("./../src/utils");
const path_1 = require("path");
/**
 * Generate task from template
 *
 * @version 1.0.0
 * @adonis-version 5.0+
 */
class MakeTask extends ace_1.BaseCommand {
    constructor(application, kernel) {
        super(application, kernel);
        this.application = application;
    }
    /**
     * Execute command
     */
    async handle() {
        try {
            // parse respective templates
            const templatePath = path_1.join(__dirname, `../templates/taskTemplate.txt`);
            this.generator
                .addFile(this.name, { pattern: 'pascalcase', form: 'singular' })
                .stub(templatePath)
                .destinationDir(utils_1.getSchedulerClassesPath(this.application))
                .useMustache()
                .appRoot(this.application.cliCwd || this.application.appRoot);
            await this.generator.run();
        }
        catch (e) {
            console.error(e);
            this.logger.error('Failed to generate task class with error ' + e.message);
        }
    }
}
MakeTask.commandName = 'make:task';
MakeTask.description = 'Generate task from template';
MakeTask.settings = {
    loadApp: true,
};
__decorate([
    ace_1.args.string({ description: 'Name of the task', required: true }),
    __metadata("design:type", String)
], MakeTask.prototype, "name", void 0);
exports.default = MakeTask;
